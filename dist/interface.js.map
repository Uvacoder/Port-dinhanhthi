{"version":3,"sources":["../src/interface.ts"],"sourcesContent":["import { RichTextItemResponse } from '@notionhq/client/build/src/api-endpoints'\nimport { StaticImageData } from 'next/image'\n\nexport type OptionalCatchAllProps = { params: OptionalCatchAllParams }\nexport type OptionalCatchAllParams = { slug: string[] }\nexport type DynamicSegmentParamsProps = { params: DynamicSegmentParams }\nexport type DynamicSegmentParams = { slug: string }\n\nexport type ImageType = {\n  sourceUrl?: string | null\n  sizes?: string\n  altText?: string\n  blurDataURL?: string\n  width?: number\n  height?: number\n  staticImageData?: StaticImageData // for default featured images\n  imgur?: string // image uploaded to imgur\n} | null\n\nexport type PostHeaderType = {\n  title: string\n  featuredImage?: ImageType\n  date?: string\n  categories?: Category[]\n  tags?: Tag[]\n  authors?: Author[]\n  selected?: boolean\n  bookCover?: ImageType\n  showToc?: boolean\n  contentCheck?: boolean // content of this post has been checked after v4?\n  icon?: {\n    emoji?: string\n    img?: ImageType\n  }\n}\n\nexport type Page = {\n  id?: string\n  title: string\n  uri: string\n  slug?: string\n}\n\nexport type Category = {\n  name: string\n  uri: string\n  // \"slug\" is obligatory but we set it \"optional\" here because the categories taken\n  // from Notion don't have slug\n  slug?: string | null\n  id?: string\n  description?: string\n  style?: {\n    bgColor: string\n    textColor: string\n    bdColor?: string\n    titleColor?: string // Used in header of category page\n  }\n  featuredImage?: ImageType\n  fontello?: string\n  backgroundClassName?: string // used for index page\n}\n\nexport type Tag = {\n  name: string\n  id?: string\n  slug?: string\n  uri?: string\n}\n\nexport type Author = {\n  slug?: string | null\n  id: string\n  name?: string | null\n  uri: string\n  description?: string | null\n  avatarUrl?: string | null\n  icon?: string | null\n  role?: string | null\n  email?: string | null\n  website?: string | null\n  posts?: Post[] | null\n}\n\nexport interface Post extends PostHeaderType {\n  slug: string\n  id?: string\n  uri: string\n  excerpt?: RichTextItemResponse[]\n}\n\nexport type NotionSorts = {\n  property: string\n  direction: 'ascending' | 'descending'\n}\n\nexport type AnnotationIgnoreField =\n  | 'bold'\n  | 'italic'\n  | 'strikethrough'\n  | 'underline'\n  | 'code'\n  | 'color'\n\nexport type TextIgnoreField = 'hyperlink' | AnnotationIgnoreField\n\nexport type SearchResult = {\n  id: string\n  title: string\n  slug: string\n  categoryNames: string[]\n  isPublished: boolean\n  isSelected: boolean\n  titleHighlighted: string\n  textHighlighted: string\n  isBookPost: boolean\n  isFake?: boolean // used to not perform the request\n}\n\nexport type BookmarkPreview = {\n  url: string\n  title?: string\n  description: string | null\n  favicon?: string\n  imageSrc: string | null\n}\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}