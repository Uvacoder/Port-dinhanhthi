{"version":3,"sources":["../../src/helpers/block-helpers.ts","../../src/notion-blocks/BlockEquation.tsx","../../src/notion-blocks/BlockInlineEquation.tsx","../../src/components/PostToc.tsx","../../src/lib/hooks.ts","../../src/notion-blocks/BlockRichText.tsx","../../src/notion-blocks/BlockText.tsx"],"sourcesContent":["import {\n  RichTextItemResponse,\n  TextRichTextItemResponse\n} from '@notionhq/client/build/src/api-endpoints'\nimport cn from 'classnames'\n\nimport { AnnotationIgnoreField } from '../interface'\n\nexport function generateTextAnnotationClasses(\n  annotations: TextRichTextItemResponse['annotations'],\n  ignore?: AnnotationIgnoreField[]\n): string {\n  return cn({\n    'font-semibold': annotations.bold && !ignore?.includes('bold'),\n    italic: annotations.italic && !ignore?.includes('italic'),\n    'underline underline-offset-4': annotations.underline && !ignore?.includes('underline'),\n    'line-through': annotations.strikethrough && !ignore?.includes('strikethrough'),\n    'font-mono text-[85%] bg-slate-200 text-rose-500 px-1 py-0 rounded':\n      annotations.code && !ignore?.includes('code'),\n    [mapColorClass(annotations.color)]: true && !ignore?.includes('color')\n  })\n}\n\nexport function getJoinedRichText(richTextArr?: RichTextItemResponse[]): string {\n  if (!richTextArr || !richTextArr.length) return ''\n  const textArr = richTextArr.map((richText: RichTextItemResponse) => richText.plain_text)\n  return textArr.join('')\n}\n\nexport function mapColorClass(color: string): string {\n  switch (color) {\n    case 'gray':\n      return 'text-gray-500'\n    case 'brown':\n      return 'text-brown-500'\n    case 'orange':\n      return 'text-orange-500'\n    case 'yellow':\n      return 'text-yellow-500'\n    case 'green':\n      return 'text-emerald-600'\n    case 'blue':\n      return 'text-blue-500'\n    case 'purple':\n      return 'text-purple-500'\n    case 'pink':\n      return 'text-pink-500'\n    case 'red':\n      return 'text-red-500'\n    // Highlight\n    case 'gray_background':\n      return 'bg-gray-100'\n    case 'brown_background':\n      return 'bg-brown-100'\n    case 'orange_background':\n      return 'bg-orange-100'\n    case 'yellow_background':\n      return 'bg-amber-100'\n    case 'green_background':\n      return 'bg-[#deffdb]'\n    case 'blue_background':\n      return 'bg-blue-100'\n    case 'purple_background':\n      return 'bg-purple-100'\n    case 'pink_background':\n      return 'bg-pink-100'\n    case 'red_background':\n      return 'bg-red-100'\n    default:\n      return ''\n  }\n}\n\nexport function getIndentLevelClass(\n  level: number,\n  isList: boolean,\n  isInsideList?: boolean\n): string {\n  switch (level) {\n    case 0:\n      return cn('pl-0', {\n        'my-4': !isList,\n        'my-1.5': isList\n      })\n    case 1:\n      return isInsideList ? 'pl-4 my-1.5' : 'pl-4 my-3'\n    case 2:\n      return isInsideList ? 'pl-8 my-1.5' : 'pl-8 my-3'\n    default:\n      return cn('pl-0', {\n        'my-4': !isList,\n        'my-1.5': isList\n      })\n  }\n}\n\nexport function convertHeadingIdToSlug(\n  headingId: string,\n  richTextArr: RichTextItemResponse[]\n): string {\n  const plainText = getJoinedRichText(richTextArr)\n  return plainText.split(' ').join('-').toLowerCase() + `-${headingId.slice(0, 3)}`\n}\n\nexport function getYoutubeVideoId(url?: string): string | null {\n  if (!url) return null\n  let videoId: string | null = null\n  const patterns = [\n    /(?:https?:\\/\\/(?:www\\.)?)?youtube\\.com\\/watch\\?(?:.*&)?v=([^&#]+)/i,\n    /(?:https?:\\/\\/(?:www\\.)?)?youtube\\.com\\/embed\\/([^/?]+)/i,\n    /(?:https?:\\/\\/(?:www\\.)?)?youtube\\.com\\/v\\/([^/?]+)/i,\n    /(?:https?:\\/\\/(?:www\\.)?)?youtube\\.com\\/user\\/[^/?]+\\/?\\?v=([^&]+)/i,\n    /(?:https?:\\/\\/(?:www\\.)?)?youtu\\.be\\/([^/?]+)/i\n  ]\n  for (let i = 0; i < patterns.length; i++) {\n    const match = url.match(patterns[i])\n    if (match && match[1]) {\n      videoId = match[1]\n      break\n    }\n  }\n  return videoId\n}\n","'use client'\n\nimport Katex from '@matejmazur/react-katex'\nimport { EquationBlockObjectResponse } from '@notionhq/client/build/src/api-endpoints'\nimport cn from 'classnames'\n\nexport const mathFontSize = 'text-base'\n\nexport default function BlockEquation(props: {\n  block: EquationBlockObjectResponse\n  className?: string\n}) {\n  const { block, className } = props\n  return (\n    <div className={cn(className, 'text-center overflow-auto md:overflow-visible')}>\n      <Katex\n        className={mathFontSize}\n        math={block?.equation?.expression}\n        settings={{\n          throwOnError: false,\n          strict: false\n        }}\n        block\n      />\n    </div>\n  )\n}\n","'use client'\n\nimport Katex from '@matejmazur/react-katex'\nimport { EquationRichTextItemResponse } from '@notionhq/client/build/src/api-endpoints'\n\nimport { generateTextAnnotationClasses } from '../helpers/block-helpers'\nimport { mathFontSize } from './BlockEquation'\n\ntype BlockInlineEquationProps = {\n  equation: EquationRichTextItemResponse\n  fontSize?: string\n}\n\nexport default function BlockInlineEquation(props: BlockInlineEquationProps) {\n  return (\n    <span className={generateTextAnnotationClasses(props.equation.annotations)}>\n      <Katex\n        className={props.fontSize ?? mathFontSize}\n        math={props.equation.plain_text}\n        settings={{\n          throwOnError: false,\n          strict: false\n        }}\n      />\n    </span>\n  )\n}\n","'use client'\n\nimport { BlockObjectResponse, RichTextItemResponse } from '@notionhq/client/build/src/api-endpoints'\nimport cn from 'classnames'\nimport { useState } from 'react'\nimport { IoIosArrowDown } from 'react-icons/io'\n\nimport { convertHeadingIdToSlug } from '../helpers/block-helpers'\nimport { useHeadsObserver } from '../lib/hooks'\nimport BlockRichText from '../notion-blocks/BlockRichText'\n\ntype PostTocProps = {\n  showToc?: boolean // The property coming from the header of Notion page\n  contentBlocks: BlockObjectResponse[]\n  inPost?: boolean // This component is used in 2 places: post-body and [postSlug]\n  minNumHeadingsToShowToc?: number\n}\n\nexport default function PostToc(props: PostTocProps) {\n  const [showContent, setShowContent] = useState(true)\n  const headingBlocks = props.contentBlocks.filter(\n    block => block.type === 'heading_2' || block.type === 'heading_3'\n  )\n\n  const showToc = props.showToc && headingBlocks.length >= (props.minNumHeadingsToShowToc || 4)\n\n  const { activeId } = useHeadsObserver()\n\n  if (!showToc) return null\n\n  return (\n    <nav\n      className={cn('h-fit w-full flex gap-2 flex-col px-4 py-3', {\n        '2xl:hidden': props.inPost, // hide on large screens\n        'max-h-full p-3': !props.inPost,\n        'bg-gray-100 rounded-xl m2it-box-shadow border-[0.5px]': !props.inPost,\n        'max-h-[350px] bg-slate-50 rounded-xl mt-8 mb-10 m2it-box-shadow': props.inPost,\n        border: props.inPost\n      })}\n      aria-label=\"Table of contents\"\n    >\n      <button\n        className={cn(\n          'flex items-center justify-between text-md font-semibold text-slate-700 pb-0'\n        )}\n        onClick={() => setShowContent(!showContent)}\n      >\n        <div>Trong bài này</div>\n        <div>\n          <IoIosArrowDown\n            className={cn('text-2xl ease-in-out transition-all duration-[400ms]', {\n              'rotate-0': showContent,\n              'rotate-[-90deg]': !showContent\n            })}\n          />\n        </div>\n      </button>\n      {showContent && (\n        <div\n          className={cn('pt-3 pl-1 overflow-auto m2it-scrollbar m2it-scrollbar-small border-t', {\n            'columns-1 md:columns-2': props.inPost\n          })}\n        >\n          {headingBlocks.map(block => {\n            const anchor = convertHeadingIdToSlug(\n              block.id,\n              (block as any)[`${block.type}`]?.rich_text\n            )\n            return (\n              <a\n                key={block.id}\n                href={`#${anchor}`}\n                className={cn('flex items-baseline gap-2 hover:m2it-link text-sm py-1', {\n                  'pl-4 border-l': block.type === 'heading_3',\n                  '-ml-1': block.type === 'heading_2',\n                  'm2it-link-hover': activeId === anchor && !props.inPost,\n                  'text-slate-700': activeId !== anchor || props.inPost\n                })}\n              >\n                {block.type === 'heading_2' && (\n                  <span className=\"text-[0.7rem] text-slate-400\">◆</span>\n                )}\n                {block.type === 'heading_3' && (\n                  <span className=\"text-[0.6rem] text-slate-400\">○</span>\n                )}\n                <span className=\"block\">\n                  {((block as any)[`${block.type}`].rich_text as RichTextItemResponse[]).map(\n                    (richText, index) => (\n                      <BlockRichText\n                        key={index}\n                        richText={richText}\n                        ignore={['hyperlink', 'color', 'underline', 'bold', 'italic']}\n                        mathFontSize=\"text-[0.83rem]\"\n                      />\n                    )\n                  )}\n                </span>\n              </a>\n            )\n          })}\n        </div>\n      )}\n    </nav>\n  )\n}\n","import { useEffect, useRef, useState } from 'react'\n\n/**\n * Used to determine which heading is currently in view\n */\nexport function useHeadsObserver() {\n  const observer = useRef<IntersectionObserver | null>(null)\n  const [activeId, setActiveId] = useState('')\n\n  useEffect(() => {\n    const handleObsever = (entries: IntersectionObserverEntry[]) => {\n      entries.forEach(entry => {\n        if (entry?.isIntersecting) {\n          setActiveId(entry.target.id)\n        }\n      })\n    }\n\n    observer.current = new IntersectionObserver(handleObsever, {\n      rootMargin: '-100px 0% -80% 0px'\n    })\n\n    const elements = document.querySelectorAll('h2, h3')\n    elements.forEach(elem => observer?.current?.observe(elem))\n    return () => observer.current?.disconnect()\n  }, [])\n\n  return { activeId }\n}\n","import {\n  EquationRichTextItemResponse,\n  RichTextItemResponse,\n  TextRichTextItemResponse\n} from '@notionhq/client/build/src/api-endpoints'\nimport dynamic from 'next/dynamic'\n\nimport { TextIgnoreField } from '../interface'\nimport BlockText from './BlockText'\n\nconst DynamicInlineEquation = dynamic(() => import('./BlockInlineEquation'))\n\ntype BlockRichTextProps = {\n  richText: RichTextItemResponse\n  ignore?: TextIgnoreField[]\n  mathFontSize?: string\n}\n\nexport default function BlockRichText(props: BlockRichTextProps) {\n  switch (props.richText.type) {\n    case 'text':\n    case 'mention':\n      return (\n        <BlockText richText={props.richText as TextRichTextItemResponse} ignore={props.ignore} />\n      )\n    case 'equation':\n      return (\n        <DynamicInlineEquation\n          equation={props.richText as EquationRichTextItemResponse}\n          fontSize={props.mathFontSize}\n        />\n      )\n    default:\n      return <BlockText richText={props.richText as TextRichTextItemResponse} />\n  }\n}\n","import {\n  MentionRichTextItemResponse,\n  TextRichTextItemResponse\n} from '@notionhq/client/build/src/api-endpoints'\nimport cn from 'classnames'\nimport { get } from 'lodash'\nimport Link from 'next/link'\n\nimport { AnnotationIgnoreField, TextIgnoreField } from '../interface'\nimport { generateTextAnnotationClasses } from '../helpers/block-helpers'\n\ntype TextProps = {\n  richText: TextRichTextItemResponse | MentionRichTextItemResponse\n  ignore?: TextIgnoreField[]\n}\n\nexport default function BlockText(props: TextProps) {\n  if (props.richText.plain_text.includes('\\n')) {\n    const lines = props.richText.plain_text.split('\\n')\n    return (\n      <>\n        {lines.map((line, index) => (\n          <span key={index}>\n            {line}\n            {index !== lines.length - 1 && <br />}\n          </span>\n        ))}\n      </>\n    )\n  }\n\n  // Hyperlink\n  if (\n    props.richText.type === 'text' &&\n    !props.ignore?.includes('hyperlink') &&\n    props.richText.href\n  ) {\n    // Link contains \"math2it.com\"\n    // This is the link coming from the current version of math2it, not the old ones\n    if (props.richText.href.includes('math2it.com') && !props.richText.href.includes('@')) {\n      const uri = getUriFromUrl(props.richText.href)\n      return (\n        <Link\n          className={generateTextAnnotationClasses(\n            props.richText.annotations,\n            props.ignore as AnnotationIgnoreField[]\n          )}\n          href={uri}\n        >\n          {props.richText.plain_text}\n        </Link>\n      )\n    } else {\n      return (\n        <a\n          className={cn(\n            'm2it-link',\n            generateTextAnnotationClasses(\n              props.richText.annotations,\n              props.ignore as AnnotationIgnoreField[]\n            )\n          )}\n          href={props.richText.href}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          {props.richText.plain_text}\n        </a>\n      )\n    }\n  }\n\n  // Mention a page\n  if (\n    !props.ignore?.includes('hyperlink') &&\n    props.richText.type === 'mention' &&\n    props.richText.mention?.type === 'page' &&\n    get(props.richText, 'mention.page.uri') // \"uri\" is a custom property defined by Math2IT\n  ) {\n    return (\n      <Link\n        className={generateTextAnnotationClasses(\n          props.richText.annotations,\n          props.ignore as AnnotationIgnoreField[]\n        )}\n        href={get(props.richText, 'mention.page.uri', '/')}\n      >\n        {props.richText.plain_text}\n      </Link>\n    )\n  }\n\n  // Mention a date\n  if (props.richText.type === 'mention' && props.richText.mention?.type === 'date') {\n    return (\n      <span\n        className={generateTextAnnotationClasses(\n          props.richText.annotations,\n          props.ignore as AnnotationIgnoreField[]\n        )}\n      >\n        {formatDate(props.richText.plain_text)}\n      </span>\n    )\n  }\n\n  const noDecoration =\n    !props.richText.annotations.bold &&\n    !props.richText.annotations.italic &&\n    !props.richText.annotations.underline &&\n    !props.richText.annotations.strikethrough &&\n    !props.richText.annotations.code &&\n    props.richText.annotations.color === 'default' &&\n    !props.richText.href\n\n  if (noDecoration) return props.richText.plain_text\n\n  return (\n    <span\n      className={generateTextAnnotationClasses(\n        props.richText.annotations,\n        props.ignore as AnnotationIgnoreField[]\n      )}\n    >\n      {props.richText.plain_text}\n    </span>\n  )\n}\n\nfunction getUriFromUrl(url: string) {\n  // Remove the protocol (http:// or https://)\n  const withoutProtocol = url.replace(/^(https?:\\/\\/)/, '')\n\n  // Remove \"www\" if present\n  const withoutWWW = withoutProtocol.replace(/^www\\./, '')\n\n  // Remove trailing slashes\n  const withoutTrailingSlashes = withoutWWW.replace(/\\/+$/, '')\n\n  // Remove \"math2it.com\" if present\n  const withoutDomain = withoutTrailingSlashes.replace(/math2it.com/, '')\n\n  // Add \"/\" at the beginning and the end\n  const slug = `${withoutDomain}/`\n\n  return slug\n}\n\nfunction formatDate(inputString: string) {\n  // Split the input string by the hyphen '-'\n  const [year, month, day] = inputString.split('-')\n\n  // Concatenate the day, month, and year with forward slashes '/'\n  const formattedDate = `${day}/${month}/${year}`\n\n  return formattedDate\n}\n"],"mappings":"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","names":["cn","import_classnames","import_jsx_runtime","Katex","import_react_katex","import_jsx_runtime","import_classnames","import_react","import_classnames","Link","cn","import_jsx_runtime","dynamic","import_jsx_runtime","cn"]}