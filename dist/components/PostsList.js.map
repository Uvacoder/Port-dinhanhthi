{"version":3,"sources":["../../src/helpers/block-helpers.ts","../../src/notion-blocks/BlockEquation.tsx","../../src/notion-blocks/BlockInlineEquation.tsx","../../src/components/PostsList.tsx","../../src/post-types/PostCardWave.tsx","../../src/post-types/PostCardWhiteBg.tsx","../../src/components/Date.tsx","../../src/components/PostFeaturedImage.tsx","../../src/components/ImageComponent.tsx","../../src/post-types/PostCardWhiteBgBig.tsx","../../src/notion-blocks/BlockRichText.tsx","../../src/notion-blocks/BlockText.tsx","../../src/components/Excerpt.tsx","../../src/post-types/PostImageBackground.tsx","../../src/post-types/PostTitleCateDate.tsx","../../src/components/Carousel.tsx"],"sourcesContent":["import {\n  RichTextItemResponse,\n  TextRichTextItemResponse\n} from '@notionhq/client/build/src/api-endpoints'\nimport cn from 'classnames'\n\nimport { AnnotationIgnoreField } from '../interface'\n\nexport function generateTextAnnotationClasses(\n  annotations: TextRichTextItemResponse['annotations'],\n  ignore?: AnnotationIgnoreField[]\n): string {\n  return cn({\n    'font-semibold': annotations.bold && !ignore?.includes('bold'),\n    italic: annotations.italic && !ignore?.includes('italic'),\n    'underline underline-offset-4': annotations.underline && !ignore?.includes('underline'),\n    'line-through': annotations.strikethrough && !ignore?.includes('strikethrough'),\n    'font-mono text-[85%] bg-slate-200 text-rose-500 px-1 py-0 rounded':\n      annotations.code && !ignore?.includes('code'),\n    [mapColorClass(annotations.color)]: true && !ignore?.includes('color')\n  })\n}\n\nexport function getJoinedRichText(richTextArr?: RichTextItemResponse[]): string {\n  if (!richTextArr || !richTextArr.length) return ''\n  const textArr = richTextArr.map((richText: RichTextItemResponse) => richText.plain_text)\n  return textArr.join('')\n}\n\nexport function mapColorClass(color: string): string {\n  switch (color) {\n    case 'gray':\n      return 'text-gray-500'\n    case 'brown':\n      return 'text-brown-500'\n    case 'orange':\n      return 'text-orange-500'\n    case 'yellow':\n      return 'text-yellow-500'\n    case 'green':\n      return 'text-emerald-600'\n    case 'blue':\n      return 'text-blue-500'\n    case 'purple':\n      return 'text-purple-500'\n    case 'pink':\n      return 'text-pink-500'\n    case 'red':\n      return 'text-red-500'\n    // Highlight\n    case 'gray_background':\n      return 'bg-gray-100'\n    case 'brown_background':\n      return 'bg-brown-100'\n    case 'orange_background':\n      return 'bg-orange-100'\n    case 'yellow_background':\n      return 'bg-amber-100'\n    case 'green_background':\n      return 'bg-[#deffdb]'\n    case 'blue_background':\n      return 'bg-blue-100'\n    case 'purple_background':\n      return 'bg-purple-100'\n    case 'pink_background':\n      return 'bg-pink-100'\n    case 'red_background':\n      return 'bg-red-100'\n    default:\n      return ''\n  }\n}\n\nexport function getIndentLevelClass(\n  level: number,\n  isList: boolean,\n  isInsideList?: boolean\n): string {\n  switch (level) {\n    case 0:\n      return cn('pl-0', {\n        'my-4': !isList,\n        'my-1.5': isList\n      })\n    case 1:\n      return isInsideList ? 'pl-4 my-1.5' : 'pl-4 my-3'\n    case 2:\n      return isInsideList ? 'pl-8 my-1.5' : 'pl-8 my-3'\n    default:\n      return cn('pl-0', {\n        'my-4': !isList,\n        'my-1.5': isList\n      })\n  }\n}\n\nexport function convertHeadingIdToSlug(\n  headingId: string,\n  richTextArr: RichTextItemResponse[]\n): string {\n  const plainText = getJoinedRichText(richTextArr)\n  return plainText.split(' ').join('-').toLowerCase() + `-${headingId.slice(0, 3)}`\n}\n\nexport function getYoutubeVideoId(url?: string): string | null {\n  if (!url) return null\n  let videoId: string | null = null\n  const patterns = [\n    /(?:https?:\\/\\/(?:www\\.)?)?youtube\\.com\\/watch\\?(?:.*&)?v=([^&#]+)/i,\n    /(?:https?:\\/\\/(?:www\\.)?)?youtube\\.com\\/embed\\/([^/?]+)/i,\n    /(?:https?:\\/\\/(?:www\\.)?)?youtube\\.com\\/v\\/([^/?]+)/i,\n    /(?:https?:\\/\\/(?:www\\.)?)?youtube\\.com\\/user\\/[^/?]+\\/?\\?v=([^&]+)/i,\n    /(?:https?:\\/\\/(?:www\\.)?)?youtu\\.be\\/([^/?]+)/i\n  ]\n  for (let i = 0; i < patterns.length; i++) {\n    const match = url.match(patterns[i])\n    if (match && match[1]) {\n      videoId = match[1]\n      break\n    }\n  }\n  return videoId\n}\n","'use client'\n\nimport Katex from '@matejmazur/react-katex'\nimport { EquationBlockObjectResponse } from '@notionhq/client/build/src/api-endpoints'\nimport cn from 'classnames'\n\nexport const mathFontSize = 'text-base'\n\nexport default function BlockEquation(props: {\n  block: EquationBlockObjectResponse\n  className?: string\n}) {\n  const { block, className } = props\n  return (\n    <div className={cn(className, 'text-center overflow-auto md:overflow-visible')}>\n      <Katex\n        className={mathFontSize}\n        math={block?.equation?.expression}\n        settings={{\n          throwOnError: false,\n          strict: false\n        }}\n        block\n      />\n    </div>\n  )\n}\n","'use client'\n\nimport Katex from '@matejmazur/react-katex'\nimport { EquationRichTextItemResponse } from '@notionhq/client/build/src/api-endpoints'\n\nimport { generateTextAnnotationClasses } from '../helpers/block-helpers'\nimport { mathFontSize } from './BlockEquation'\n\ntype BlockInlineEquationProps = {\n  equation: EquationRichTextItemResponse\n  fontSize?: string\n}\n\nexport default function BlockInlineEquation(props: BlockInlineEquationProps) {\n  return (\n    <span className={generateTextAnnotationClasses(props.equation.annotations)}>\n      <Katex\n        className={props.fontSize ?? mathFontSize}\n        math={props.equation.plain_text}\n        settings={{\n          throwOnError: false,\n          strict: false\n        }}\n      />\n    </span>\n  )\n}\n","'use client'\n\nimport cn from 'classnames'\nimport React from 'react'\n\nimport { Post } from '../interface'\nimport PostCardWave from '../post-types/PostCardWave'\nimport PostCardWhiteBg, { PostCardWhiteBgOpts } from '../post-types/PostCardWhiteBg'\nimport PostCardWhiteBgBig, { PostCardWhiteBgBigOpts } from '../post-types/PostCardWhiteBgBig'\nimport PostImageBackground, { PostImageBackgroundOpts } from '../post-types/PostImageBackground'\nimport PostTitleCateDate, { PostTitleCateDateOpts } from '../post-types/PostTitleCateDate'\nimport { Carousel, CarouselItem } from './Carousel'\n\nexport type PostType =\n  | 'PostTitleCateDate'\n  | 'PostCardWhiteBg'\n  | 'PostCardWhiteBgBig'\n  | 'PostImageBackground'\n  | 'PostCardWave'\n\nexport type PostListStyle = 'default' | 'carousel'\n\nexport type PostTypeOpts =\n  | PostTitleCateDateOpts\n  | PostCardWhiteBgOpts\n  | PostCardWhiteBgBigOpts\n  | PostImageBackgroundOpts\n\ntype PostListProps = {\n  listStyle?: PostListStyle\n  posts: Post[]\n  postType: PostType\n  postTypeOpts?: PostTypeOpts\n  options?: {\n    className?: string\n  }\n  fontClassName?: string\n}\n\nexport const postListGridCLass = cn(\n  'grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4 gap-5 sm:gap-x-4'\n)\n\nexport default function PostList(props: PostListProps) {\n  const className = props.options?.className ? props.options.className : postListGridCLass\n  return (\n    <section>\n      {(!props.listStyle || props.listStyle === 'default') && (\n        <div className={className}>\n          {props.posts.map((post, index) => (\n            <React.Fragment key={post.uri}>\n              {getPostTypeElement(props.postType, post, props.postTypeOpts, index)}\n            </React.Fragment>\n          ))}\n        </div>\n      )}\n      {props.listStyle === 'carousel' && (\n        <Carousel\n          items={props.posts}\n          renderItem={({ item, isSnapPoint, index }) => (\n            <CarouselItem key={item.id} isSnapPoint={isSnapPoint} widthClass={'w-80'}>\n              {getPostTypeElement(props.postType, item, props.postTypeOpts, index)}\n            </CarouselItem>\n          )}\n        />\n      )}\n    </section>\n  )\n}\n\nfunction getPostTypeElement(\n  postType: PostType,\n  post: Post,\n  postTypeOpts?: PostTypeOpts,\n  index?: number\n) {\n  switch (postType) {\n    case 'PostTitleCateDate':\n      return <PostTitleCateDate post={post} options={postTypeOpts} />\n    case 'PostCardWhiteBg':\n      return <PostCardWhiteBg post={post} options={postTypeOpts} />\n    case 'PostCardWhiteBgBig':\n      return <PostCardWhiteBgBig post={post} options={postTypeOpts} />\n    case 'PostImageBackground':\n      return <PostImageBackground post={post} />\n    case 'PostCardWave':\n      return <PostCardWave post={post} colorIndex={index} />\n  }\n}\n","import cn from 'classnames'\nimport Link from 'next/link'\n\nimport { Post } from '../interface'\n\ntype PostCardWaveProps = {\n  post: Post\n  colorIndex?: number\n  fontClassName?: string\n}\n\nexport default function PostCardWave(props: PostCardWaveProps) {\n  return (\n    <Link href={props.post.uri || '/'}>\n      <div className=\"post-card-wave group\">\n        <span\n          className={cn(\n            props.fontClassName,\n            'card-title font-semibold group-hover:m2it-link-hover text-slate-800',\n            'leading-[1.35] text-[0.95rem]'\n          )}\n        >\n          {props.post.title}\n        </span>\n        <div className=\"bottom-wave\">\n          <svg\n            className=\"waves\"\n            preserveAspectRatio=\"none\"\n            shapeRendering=\"auto\"\n            viewBox=\"0 24 150 28\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <defs>\n              <path\n                d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\n                id=\"gentle-wave\"\n              ></path>\n            </defs>\n            <g className=\"parallax\">\n              <use\n                fill={`rgba(${waveColors[props.colorIndex || 0]}, 0.1)`}\n                x=\"48\"\n                xlinkHref=\"#gentle-wave\"\n                y=\"0\"\n              ></use>\n              <use\n                fill={`rgba(${waveColors[props.colorIndex || 0]}, 0.05)`}\n                x=\"48\"\n                xlinkHref=\"#gentle-wave\"\n                y=\"3\"\n              ></use>\n              <use\n                fill={`rgba(${waveColors[props.colorIndex || 0]}, 0.01)`}\n                x=\"48\"\n                xlinkHref=\"#gentle-wave\"\n                y=\"5\"\n              ></use>\n              <use\n                fill={`rgba(${waveColors[props.colorIndex || 0]}, 0.005)`}\n                x=\"48\"\n                xlinkHref=\"#gentle-wave\"\n                y=\"7\"\n              ></use>\n            </g>\n          </svg>\n        </div>\n      </div>\n    </Link>\n  )\n}\n\nconst waveColors = [\n  '0, 0, 255',\n  '255, 0, 166',\n  '0, 0, 0',\n  '166, 82, 0',\n  '0, 120, 0',\n  '166, 0, 82',\n  '166, 0, 255',\n  '0, 139, 139',\n  '0, 255, 255',\n  '0, 255, 166',\n  '166, 255, 0'\n]\n","import cn from 'classnames'\nimport Link from 'next/link'\n\nimport Date from '../components/Date'\nimport PostFeaturedImage from '../components/PostFeaturedImage'\nimport { Post } from '../interface'\n\nexport type PostCardWhiteBgOpts = {\n  hideDate?: boolean\n  fontClassName?: string\n}\n\ntype PostTitleCateDateProps = {\n  post: Post\n  options?: PostCardWhiteBgOpts\n}\n\nexport default function PostCardWhiteBg(props: PostTitleCateDateProps) {\n  const { title, featuredImage, date, uri } = props.post\n  return (\n    <div className=\"group overflow-hidden rounded-md bg-white shadow-lg\">\n      <Link className={cn(props.options?.fontClassName, 'text-center')} href={uri || '/'}>\n        <div className=\"flex flex-col justify-center \">\n          <div className=\"relative h-28 w-full overflow-hidden \">\n            <PostFeaturedImage featuredImage={featuredImage} title={title} />\n          </div>\n        </div>\n        <div className=\"group-hover:m2it-link-hover px-4 py-3 text-base font-bold\">{title}</div>\n        {!props.options?.hideDate && date && (\n          <div className=\"px-2 pb-4 text-sm opacity-80\">\n            <Date dateString={date} />\n          </div>\n        )}\n      </Link>\n    </div>\n  )\n}\n","import Moment from 'moment'\n\nexport default function Date({ dateString }: { dateString: string }) {\n  const date = Moment(dateString).format('DD/MM/YYYY')\n  return <span>{date}</span>\n}\n","'use client'\n\nimport cn from 'classnames'\nimport { StaticImageData } from 'next/image'\n\nimport { ImageType } from '../interface'\nimport ImageComponent from './ImageComponent'\n\ntype PostFeaturedImageProps = {\n  title: string\n  featuredImage: ImageType\n  className?: string\n  defaultImage?: StaticImageData\n}\n\n/**\n * This component is used for displaying featured image of a post IN A POST LIST ONLY.\n */\nexport default function PostFeaturedImage(props: PostFeaturedImageProps) {\n  const { title, featuredImage } = props\n  return (\n    <>\n      <div className=\"relative flex h-full w-full items-center overflow-hidden\">\n        <ImageComponent\n          defaultImage={props.defaultImage}\n          image={featuredImage}\n          alt={`Hình đại diện cho bài viết \"${title}\"`}\n          className={cn('object-cover', props.className)}\n          imageProps={{\n            fill: true\n          }}\n        />\n      </div>\n    </>\n  )\n}\n","'use client'\n\nimport Image, { ImageProps, StaticImageData } from 'next/image'\n\nimport { ImageType } from '../interface'\n\ntype ImageComponentProps = {\n  image: ImageType\n  defaultImage?: StaticImageData\n  alt?: string\n  className?: string\n  imageProps?: Partial<ImageProps>\n}\n\n/**\n * This component is used for all image-related purposes.\n * For example, featured images, book cover image, notion-block's images, etc.\n */\nexport default function ImageComponent(props: ImageComponentProps) {\n  const image = props.image?.staticImageData ? (\n    <Image\n      alt={props.alt || 'Tên hình không xác định'}\n      src={props.image.staticImageData}\n      className={props.className}\n      {...props.imageProps}\n    />\n  ) : props.image?.sourceUrl && props.image?.blurDataURL ? (\n    <Image\n      alt={props.alt || 'Tên hình không xác định'}\n      src={props.image.sourceUrl}\n      className={props.className}\n      placeholder=\"blur\"\n      blurDataURL={props.image.blurDataURL}\n      {...props.imageProps}\n    />\n  ) : props.defaultImage ? (\n    <Image\n      alt={props.alt || 'Tên hình không xác định'}\n      src={props.defaultImage}\n      className={props.className}\n      {...props.imageProps}\n    />\n  ) : null\n\n  return <>{image}</>\n}\n","import cn from 'classnames'\nimport Link from 'next/link'\n\nimport Date from '../components/Date'\nimport Excerpt from '../components/Excerpt'\nimport PostFeaturedImage from '../components/PostFeaturedImage'\nimport { Post } from '../interface'\n\nexport type PostCardWhiteBgBigOpts = {\n  hideDate?: boolean\n  hideAuthor?: boolean\n  hideExcerpt?: boolean\n  fontClassName?: string\n}\n\ntype PostTitleCateDateProps = {\n  post: Post\n  options?: PostCardWhiteBgBigOpts\n}\n\nexport const CWBBHeightClass = 'h-36'\n\nexport default function PostCardWhiteBgBig(props: PostTitleCateDateProps) {\n  const { title, featuredImage, date, uri, excerpt, authors } = props.post\n  const options = props.options\n  return (\n    <div className=\"group overflow-hidden rounded-md bg-white shadow-lg h-full\">\n      <Link className={cn(options?.fontClassName, 'text-center')} href={uri || '/'}>\n        <div className=\"flex flex-col justify-center\">\n          <div className={cn('relative w-full overflow-hidden', CWBBHeightClass)}>\n            <PostFeaturedImage featuredImage={featuredImage} title={title} />\n          </div>\n        </div>\n        <div className=\"p-4\">\n          <div className=\"group-hover:m2it-link-hover text-base font-bold leading-[1.35]\">\n            {title}\n          </div>\n          {(!options?.hideDate || !options?.hideAuthor) && (\n            <div className=\"flex justify-center gap-2 p-2\">\n              {!options?.hideDate && date && (\n                <div className=\"text-sm opacity-80\">\n                  <i className=\"icon-clock mr-1\"></i>\n                  <Date dateString={date} />\n                </div>\n              )}\n              {!options?.hideAuthor && authors?.length && (\n                <div className=\"flex gap-1 text-sm opacity-80\">\n                  {authors?.length > 1 && (\n                    <>\n                      <i className=\"icon-users-outline\"></i>\n                      <span>Nhiều tác giả</span>\n                    </>\n                  )}\n                  {authors?.length <= 1 && (\n                    <>\n                      <i className=\"icon-user-outline -mr-1\"></i>\n                      <span>{authors[0].name}</span>\n                    </>\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n          {!options?.hideExcerpt && excerpt && (\n            <div className=\"pt-2 text-[0.8rem] opacity-80 group-hover:opacity-100\">\n              <Excerpt excerpt={excerpt} defaultExcerpt=\"Một bài viết trên Math2IT\"></Excerpt>\n            </div>\n          )}\n        </div>\n      </Link>\n    </div>\n  )\n}\n","import {\n  EquationRichTextItemResponse,\n  RichTextItemResponse,\n  TextRichTextItemResponse\n} from '@notionhq/client/build/src/api-endpoints'\nimport dynamic from 'next/dynamic'\n\nimport { TextIgnoreField } from '../interface'\nimport BlockText from './BlockText'\n\nconst DynamicInlineEquation = dynamic(() => import('./BlockInlineEquation'))\n\ntype BlockRichTextProps = {\n  richText: RichTextItemResponse\n  ignore?: TextIgnoreField[]\n  mathFontSize?: string\n}\n\nexport default function BlockRichText(props: BlockRichTextProps) {\n  switch (props.richText.type) {\n    case 'text':\n    case 'mention':\n      return (\n        <BlockText richText={props.richText as TextRichTextItemResponse} ignore={props.ignore} />\n      )\n    case 'equation':\n      return (\n        <DynamicInlineEquation\n          equation={props.richText as EquationRichTextItemResponse}\n          fontSize={props.mathFontSize}\n        />\n      )\n    default:\n      return <BlockText richText={props.richText as TextRichTextItemResponse} />\n  }\n}\n","import {\n  MentionRichTextItemResponse,\n  TextRichTextItemResponse\n} from '@notionhq/client/build/src/api-endpoints'\nimport cn from 'classnames'\nimport { get } from 'lodash'\nimport Link from 'next/link'\n\nimport { AnnotationIgnoreField, TextIgnoreField } from '../interface'\nimport { generateTextAnnotationClasses } from '../helpers/block-helpers'\n\ntype TextProps = {\n  richText: TextRichTextItemResponse | MentionRichTextItemResponse\n  ignore?: TextIgnoreField[]\n}\n\nexport default function BlockText(props: TextProps) {\n  if (props.richText.plain_text.includes('\\n')) {\n    const lines = props.richText.plain_text.split('\\n')\n    return (\n      <>\n        {lines.map((line, index) => (\n          <span key={index}>\n            {line}\n            {index !== lines.length - 1 && <br />}\n          </span>\n        ))}\n      </>\n    )\n  }\n\n  // Hyperlink\n  if (\n    props.richText.type === 'text' &&\n    !props.ignore?.includes('hyperlink') &&\n    props.richText.href\n  ) {\n    // Link contains \"math2it.com\"\n    // This is the link coming from the current version of math2it, not the old ones\n    if (props.richText.href.includes('math2it.com') && !props.richText.href.includes('@')) {\n      const uri = getUriFromUrl(props.richText.href)\n      return (\n        <Link\n          className={generateTextAnnotationClasses(\n            props.richText.annotations,\n            props.ignore as AnnotationIgnoreField[]\n          )}\n          href={uri}\n        >\n          {props.richText.plain_text}\n        </Link>\n      )\n    } else {\n      return (\n        <a\n          className={cn(\n            'm2it-link',\n            generateTextAnnotationClasses(\n              props.richText.annotations,\n              props.ignore as AnnotationIgnoreField[]\n            )\n          )}\n          href={props.richText.href}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          {props.richText.plain_text}\n        </a>\n      )\n    }\n  }\n\n  // Mention a page\n  if (\n    !props.ignore?.includes('hyperlink') &&\n    props.richText.type === 'mention' &&\n    props.richText.mention?.type === 'page' &&\n    get(props.richText, 'mention.page.uri') // \"uri\" is a custom property defined by Math2IT\n  ) {\n    return (\n      <Link\n        className={generateTextAnnotationClasses(\n          props.richText.annotations,\n          props.ignore as AnnotationIgnoreField[]\n        )}\n        href={get(props.richText, 'mention.page.uri', '/')}\n      >\n        {props.richText.plain_text}\n      </Link>\n    )\n  }\n\n  // Mention a date\n  if (props.richText.type === 'mention' && props.richText.mention?.type === 'date') {\n    return (\n      <span\n        className={generateTextAnnotationClasses(\n          props.richText.annotations,\n          props.ignore as AnnotationIgnoreField[]\n        )}\n      >\n        {formatDate(props.richText.plain_text)}\n      </span>\n    )\n  }\n\n  const noDecoration =\n    !props.richText.annotations.bold &&\n    !props.richText.annotations.italic &&\n    !props.richText.annotations.underline &&\n    !props.richText.annotations.strikethrough &&\n    !props.richText.annotations.code &&\n    props.richText.annotations.color === 'default' &&\n    !props.richText.href\n\n  if (noDecoration) return props.richText.plain_text\n\n  return (\n    <span\n      className={generateTextAnnotationClasses(\n        props.richText.annotations,\n        props.ignore as AnnotationIgnoreField[]\n      )}\n    >\n      {props.richText.plain_text}\n    </span>\n  )\n}\n\nfunction getUriFromUrl(url: string) {\n  // Remove the protocol (http:// or https://)\n  const withoutProtocol = url.replace(/^(https?:\\/\\/)/, '')\n\n  // Remove \"www\" if present\n  const withoutWWW = withoutProtocol.replace(/^www\\./, '')\n\n  // Remove trailing slashes\n  const withoutTrailingSlashes = withoutWWW.replace(/\\/+$/, '')\n\n  // Remove \"math2it.com\" if present\n  const withoutDomain = withoutTrailingSlashes.replace(/math2it.com/, '')\n\n  // Add \"/\" at the beginning and the end\n  const slug = `${withoutDomain}/`\n\n  return slug\n}\n\nfunction formatDate(inputString: string) {\n  // Split the input string by the hyphen '-'\n  const [year, month, day] = inputString.split('-')\n\n  // Concatenate the day, month, and year with forward slashes '/'\n  const formattedDate = `${day}/${month}/${year}`\n\n  return formattedDate\n}\n","import { RichTextItemResponse } from '@notionhq/client/build/src/api-endpoints'\n\nimport BlockRichText from '../notion-blocks/BlockRichText'\n\ntype ExcerptProps = {\n  defaultExcerpt?: string\n  excerpt: RichTextItemResponse[]\n}\n\nexport default function Excerpt(props: ExcerptProps) {\n  if (!props.excerpt || !props.excerpt.length) {\n    if (props.defaultExcerpt) return <span>{props.defaultExcerpt}</span>\n    return 'Undefined excerpt'\n  }\n\n  return (\n    <span>\n      {props.excerpt.map((richText, index) => (\n        <BlockRichText key={index} richText={richText} ignore={['hyperlink']} />\n      ))}\n    </span>\n  )\n}\n","import cn from 'classnames'\nimport Link from 'next/link'\n\nimport PostFeaturedImage from '../components/PostFeaturedImage'\nimport { Post } from '../interface'\n\nexport type PostImageBackgroundOpts = {\n  fontClassName?: string\n}\n\ntype PostImageBackgroundProps = {\n  post: Post\n  options?: PostImageBackgroundOpts\n}\n\nexport const PIBHeightClass = 'h-36'\n\nexport default function PostImageBackground(props: PostImageBackgroundProps) {\n  const { title, featuredImage, uri } = props.post\n  return (\n    <div className=\"group overflow-hidden rounded-md shadow-lg\">\n      <Link className={cn(props.options?.fontClassName, 'text-center')} href={uri || '/'}>\n        <div className=\"flex flex-col justify-center\">\n          <div className={cn('relative w-full overflow-hidden mix-blend-overlay', PIBHeightClass)}>\n            <PostFeaturedImage featuredImage={featuredImage} title={title} />\n            <div\n              className={cn(\n                'absolute bottom-0 left-0 flex h-fit w-full flex-col justify-end',\n                'bg-gradient-to-t from-gray-900 to-transparent p-4 pt-6 text-sm font-bold',\n                'leading-5 text-white duration-300 hover:from-black hover:to-transparent'\n              )}\n            >\n              {title}\n            </div>\n          </div>\n        </div>\n      </Link>\n    </div>\n  )\n}\n","import cn from 'classnames'\nimport Link from 'next/link'\nimport { IoBookOutline } from 'react-icons/io5'\n\nimport Date from '../components/Date'\nimport PostFeaturedImage from '../components/PostFeaturedImage'\nimport { Post } from '../interface'\n\nexport type PostTitleCateDateOpts = {\n  hideCategory?: boolean\n  hideDate?: boolean\n  fontClassName?: string\n}\n\ntype PostTitleCateDateProps = {\n  post: Post\n  options?: PostTitleCateDateOpts\n  defaultCategoryBgColor?: string\n  defaultCategoryTextColor?: string\n}\n\nexport const TCDFIHeightClass = 'h-28'\n\nexport default function PostTitleCateDate(props: PostTitleCateDateProps) {\n  const { title, featuredImage, date, categories, uri } = props.post\n  const options = props.options\n  const category = categories ? categories[0] : null\n  return (\n    <div className=\"group\">\n      <Link className={cn(options?.fontClassName, 'text-center')} href={uri || '/'}>\n        <div\n          className={cn('flex flex-col justify-center overflow-hidden rounded-t-md shadow-sm', {\n            'rounded-b-md': !category || options?.hideCategory\n          })}\n        >\n          <div className={cn('relative w-full overflow-hidden', TCDFIHeightClass)}>\n            <PostFeaturedImage\n              className=\"duration-300 group-hover:scale-110\"\n              featuredImage={featuredImage}\n              title={title}\n            />\n          </div>\n          {!options?.hideCategory && category && (\n            <div\n              style={{\n                backgroundColor: `${\n                  category.style?.bgColor || props.defaultCategoryBgColor || '#eee'\n                }`,\n                color: `${category.style?.textColor || props.defaultCategoryTextColor || '#222'}`\n              }}\n              className={cn('rounded-b-md px-2 py-1 text-xs font-semibold')}\n            >\n              {category?.name}\n            </div>\n          )}\n        </div>\n        <div\n          className={cn(\n            'group-hover:m2it-link-hover p-2 text-[0.95rem] font-semibold leading-[1.35]'\n          )}\n        >\n          {title}\n          {!!props.post.bookCover && (\n            <IoBookOutline className=\"group-hover:m2it-link-hover mb-[2px] ml-2 inline text-sm text-slate-700\" />\n          )}\n        </div>\n        {!options?.hideDate && (\n          <div className=\"text-sm opacity-80\">\n            <i className=\"icon-clock mr-1\"></i>\n            {date && <Date dateString={date} />}\n          </div>\n        )}\n      </Link>\n    </div>\n  )\n}\n","import cn from 'classnames'\nimport React from 'react'\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa'\nimport { useSnapCarousel } from 'react-snap-carousel'\n\ninterface CarouselProps<T> {\n  readonly items: T[]\n  readonly renderItem: (props: CarouselRenderItemProps<T>) => React.ReactElement<CarouselItemProps>\n}\n\ninterface CarouselRenderItemProps<T> {\n  readonly item: T\n  readonly isSnapPoint: boolean\n  readonly index: number\n}\n\nexport const Carousel = <T,>({ items, renderItem }: CarouselProps<T>) => {\n  const { scrollRef, pages, activePageIndex, prev, next, goTo, snapPointIndexes } =\n    useSnapCarousel()\n\n  const arrowBtnClasses = cn(\n    'absolute top-14 bg-white rounded-full p-1 shadow-md hover:shadow-lg transition-all'\n  )\n  const arrowClasses = cn(\n    'text-2xl hover:text-3xl transition-all text-slate-400 hover:text-slate-600'\n  )\n\n  return (\n    <div className=\"relative\">\n      <div\n        ref={scrollRef}\n        className={cn('no-scrollbar relative flex overflow-auto snap-mandatory gap-4 pb-4')}\n      >\n        {items.map((item, i) =>\n          renderItem({\n            item,\n            isSnapPoint: snapPointIndexes.has(i),\n            index: i\n          })\n        )}\n      </div>\n\n      <button\n        onClick={() => prev()}\n        className={cn('-left-4', arrowBtnClasses, {\n          'opacity-0': activePageIndex <= 0\n        })}\n      >\n        <FaChevronLeft className={arrowClasses} />\n      </button>\n\n      <button\n        onClick={() => next()}\n        className={cn('-right-4', arrowBtnClasses, {\n          'opacity-0': activePageIndex === pages.length - 1\n        })}\n      >\n        <FaChevronRight className={arrowClasses} />\n      </button>\n\n      <div aria-hidden className=\"flex items-center justify-center gap-2 mt-4\">\n        {pages.map((_, i) => (\n          <button\n            key={i}\n            className={cn('h-2.5 rounded-full bg-slate-600 transition-all hover:opacity-60', {\n              'opacity-40 w-2.5 hover:w-3.5': activePageIndex !== i,\n              'w-5 opacity-70': activePageIndex === i\n            })}\n            onClick={() => goTo(i)}\n          ></button>\n        ))}\n      </div>\n    </div>\n  )\n}\n\ninterface CarouselItemProps {\n  readonly isSnapPoint: boolean\n  readonly children?: React.ReactNode\n  readonly widthClass?: string\n}\n\nexport const CarouselItem = ({ isSnapPoint, children, widthClass }: CarouselItemProps) => (\n  <div\n    className={cn(\n      'shrink-0',\n      {\n        'snap-start': isSnapPoint\n      },\n      widthClass ?? 'w-64'\n    )}\n  >\n    {children}\n  </div>\n)\n"],"mappings":"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","names":["cn","import_classnames","import_classnames","import_jsx_runtime","Katex","import_react_katex","import_jsx_runtime","import_classnames","Link","cn","import_classnames","import_link","import_jsx_runtime","Moment","import_classnames","import_jsx_runtime","Image","import_jsx_runtime","cn","import_jsx_runtime","Link","cn","import_classnames","import_link","import_classnames","import_link","import_jsx_runtime","Link","cn","import_jsx_runtime","dynamic","import_jsx_runtime","import_jsx_runtime","Link","cn","import_classnames","import_link","import_jsx_runtime","Link","cn","import_classnames","import_link","import_jsx_runtime","Link","cn","import_classnames","import_jsx_runtime","cn","import_jsx_runtime","cn","React"]}