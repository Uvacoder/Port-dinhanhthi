{"version":3,"sources":["../../src/components/BadgeTech.tsx","../../src/components/ImageComponent.tsx"],"sourcesContent":["'use client'\n\nimport cn from 'classnames'\n\nimport { ImageType } from '../interface'\nimport ImageComponent from './ImageComponent'\n\nexport type TechItem = {\n  id: string\n  name: string\n  icon: ImageType\n  url: string\n  imgClass?: string\n}\n\ntype BadgeTechProps = {\n  tech: TechItem\n  hideText?: boolean\n}\n\nexport default function BadgeTech(props: BadgeTechProps) {\n  return (\n    <>\n      <a\n        className={`flex h-6 w-fit items-center justify-center rounded-md border bg-[#ededed] px-1\n        align-baseline text-base text-[#1e293b] shadow-sm transition duration-200\n        duration-200 ease-in-out ease-in-out hover:-translate-y-0.5 dark:border-[#3b3e54]\n        dark:bg-[#343e4c] dark:text-[#f8fafc] tooltip-auto`}\n        href={props.tech.url}\n        data-title={props.tech.name}\n      >\n        <ImageComponent\n          image={props.tech.icon}\n          alt={props.tech.name}\n          className={cn('w-[18px] h-[18px]', props.tech.imgClass)}\n          imageProps={{ width: 32, height: 32 }}\n        />\n        {!props.hideText && (\n          <span className=\"ml-1.5 whitespace-nowrap text-[81%] tracking-wide\">\n            {props.tech.name}\n          </span>\n        )}\n      </a>\n    </>\n  )\n}\n","'use client'\n\nimport Image, { ImageProps, StaticImageData } from 'next/image'\n\nimport { ImageType } from '../interface'\n\ntype ImageComponentProps = {\n  image?: ImageType\n  defaultImage?: StaticImageData\n  alt?: string\n  className?: string\n  imageProps?: Partial<ImageProps>\n}\n\n/**\n * This component is used for all image-related purposes.\n * For example, featured images, book cover image, notion-block's images, etc.\n */\nexport default function ImageComponent(props: ImageComponentProps) {\n  const image = () =>\n    props.image?.staticImageData ? (\n      <Image\n        alt={props.alt || 'Tên hình không xác định'}\n        src={props.image.staticImageData}\n        className={props.className}\n        {...props.imageProps}\n      />\n    ) : props.image?.sourceUrl && props.image?.blurDataURL ? (\n      <Image\n        alt={props.alt || 'Tên hình không xác định'}\n        src={props.image.sourceUrl}\n        className={props.className}\n        placeholder=\"blur\"\n        blurDataURL={props.image.blurDataURL}\n        {...props.imageProps}\n      />\n    ) : props.defaultImage ? (\n      <Image\n        alt={props.alt || 'Tên hình không xác định'}\n        src={props.defaultImage}\n        className={props.className}\n        {...props.imageProps}\n      />\n    ) : null\n\n  return <>{image()}</>\n}\n"],"mappings":";;;AAEA,OAAO,QAAQ;;;ACAf,OAAO,WAA4C;AAmB7C,SAwBG,UAxBH;AAHS,SAAR,eAAgC,OAA4B;AACjE,QAAM,QAAQ,MACZ,MAAM,OAAO,kBACX;AAAA,IAAC;AAAA;AAAA,MACC,KAAK,MAAM,OAAO;AAAA,MAClB,KAAK,MAAM,MAAM;AAAA,MACjB,WAAW,MAAM;AAAA,MAChB,GAAG,MAAM;AAAA;AAAA,EACZ,IACE,MAAM,OAAO,aAAa,MAAM,OAAO,cACzC;AAAA,IAAC;AAAA;AAAA,MACC,KAAK,MAAM,OAAO;AAAA,MAClB,KAAK,MAAM,MAAM;AAAA,MACjB,WAAW,MAAM;AAAA,MACjB,aAAY;AAAA,MACZ,aAAa,MAAM,MAAM;AAAA,MACxB,GAAG,MAAM;AAAA;AAAA,EACZ,IACE,MAAM,eACR;AAAA,IAAC;AAAA;AAAA,MACC,KAAK,MAAM,OAAO;AAAA,MAClB,KAAK,MAAM;AAAA,MACX,WAAW,MAAM;AAAA,MAChB,GAAG,MAAM;AAAA;AAAA,EACZ,IACE;AAEN,SAAO,gCAAG,gBAAM,GAAE;AACpB;;;ADxBI,qBAAAA,WASI,OAAAC,MARF,YADF;AAFW,SAAR,UAA2B,OAAuB;AACvD,SACE,gBAAAA,KAAAD,WAAA,EACE;AAAA,IAAC;AAAA;AAAA,MACC,WAAW;AAAA;AAAA;AAAA;AAAA,MAIX,MAAM,MAAM,KAAK;AAAA,MACjB,cAAY,MAAM,KAAK;AAAA,MAEvB;AAAA,wBAAAC;AAAA,UAAC;AAAA;AAAA,YACC,OAAO,MAAM,KAAK;AAAA,YAClB,KAAK,MAAM,KAAK;AAAA,YAChB,WAAW,GAAG,qBAAqB,MAAM,KAAK,QAAQ;AAAA,YACtD,YAAY,EAAE,OAAO,IAAI,QAAQ,GAAG;AAAA;AAAA,QACtC;AAAA,QACC,CAAC,MAAM,YACN,gBAAAA,KAAC,UAAK,WAAU,qDACb,gBAAM,KAAK,MACd;AAAA;AAAA;AAAA,EAEJ,GACF;AAEJ;","names":["Fragment","jsx"]}