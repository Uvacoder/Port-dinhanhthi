{"version":3,"sources":["../../src/components/Date.tsx"],"sourcesContent":["'use client'\n\nimport Moment from 'moment'\nimport { useEffect, useState } from 'react'\n\ntype DateProps = {\n  dateString: string\n  format?: string\n  toDuration?: boolean\n  className?: string\n  humanize?: boolean\n}\n\nexport default function DateComponent(props: DateProps) {\n  const [humanized, setHumanized] = useState('')\n\n  // useEffect(() => {\n  //   const date = new Date(props.dateString)\n  //   const today = new Date()\n  //   const diffTime = Math.abs(today.getTime() - lastModifiedDate.getTime())\n  //   const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n  //   if (diffDays <= maxDays) {\n  //     setIsIn7Days(true)\n  //   }\n\n  //   const createdDate = new Date(post.createdDate)\n  //   const diffTime2 = Math.abs(today.getTime() - createdDate.getTime())\n  //   const diffDays2 = Math.ceil(diffTime2 / (1000 * 60 * 60 * 24))\n  //   if (diffDays2 <= maxDays) {\n  //     setIsNew(true)\n  //   }\n  // }, [])\n\n  const date = Moment(props.dateString).format(props.format || 'DD/MM/YYYY')\n  return <span className={props.className}>{date}</span>\n}\n"],"mappings":";;;AAEA,OAAO,YAAY;AACnB,SAAoB,gBAAgB;AA+B3B;AArBM,SAAR,cAA+B,OAAkB;AACtD,QAAM,CAAC,WAAW,YAAY,IAAI,SAAS,EAAE;AAmB7C,QAAM,OAAO,OAAO,MAAM,UAAU,EAAE,OAAO,MAAM,UAAU,YAAY;AACzE,SAAO,oBAAC,UAAK,WAAW,MAAM,WAAY,gBAAK;AACjD;","names":[]}